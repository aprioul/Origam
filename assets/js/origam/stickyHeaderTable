
/**
 * Apply origamStickyTable
 *
 */

(function ($, w) {

    'use strict';

    // PASSWORD PUBLIC CLASS DEFINITION
    // ===============================

    var StickyTable = function (element, options) {
        this.type       = null;
        this.options    = null;
        this.$element   = null;

        this.init('stickyTable', element, options)
    };

    if (!$.fn.input) throw new Error('StickyTable requires table.js');

    StickyTable.VERSION  = '0.1.0';

    StickyTable.TRANSITION_DURATION = 1000;

    StickyTable.DEFAULTS = $.extend({}, $.fn.table.Constructor.DEFAULTS, {

    });

    StickyTable.prototype = $.extend({}, $.fn.table.Constructor.prototype);

    StickyTable.prototype.constructor = StickyTable;

    StickyTable.prototype.tableEvent = function (options) {

    };

    StickyTable.prototype.getDefaults = function () {
        return StickyTable.DEFAULTS
    };

    // PASSWORD PLUGIN DEFINITION
    // =========================

    function Plugin(option) {
        return this.each(function () {
            var $this   = $(this);
            var data    = $this.data('origam.stickyTable');
            var options = typeof option == 'object' && option;

            if (!data) $this.data('origam.stickyTable', (data = new StickyTable(this, options)));
            if (typeof option == 'string') data[option]()
        })
    }

    var old = $.fn.stickyTable;

    $.fn.stickyTable             = Plugin;
    $.fn.stickyTable.Constructor = StickyTable;


    // PASSWORD NO CONFLICT
    // ===================

    $.fn.input.noConflict = function () {
        $.fn.stickyTable = old;
        return this
    }

    $(document).ready(function() {
        $('[data-app="stickyTable"]').stickyTable();
    });

})(jQuery, window);